---
apiVersion: v1
kind: Namespace
metadata:
  name: slack-bot
  labels:
    name: slack-bot
    security.policy/enforce: "strict"
---
apiVersion: v1
kind: Secret
metadata:
  name: slack-secrets
  namespace: slack-bot
type: Opaque
stringData:
  # Slack Bot Token - replace with actual values
  SLACK_BOT_TOKEN: "xoxb-your-bot-token-here"
  # Slack Signing Secret for webhook verification
  SLACK_SIGNING_SECRET: "your-signing-secret-here"
  # Slack App Token for Socket Mode (if needed)
  SLACK_APP_TOKEN: "xapp-your-app-token-here"
  # Slack Team ID
  SLACK_TEAM_ID: "T1234567890"
  # Slack Channel IDs (comma-separated)
  SLACK_CHANNEL_IDS: "C1234567890,C0987654321"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: slack-bot-config
  namespace: slack-bot
data:
  # Security configuration
  WEBHOOK_TIMEOUT: "30"
  MAX_REQUEST_SIZE: "1048576"  # 1MB
  RATE_LIMIT_WINDOW: "60"
  RATE_LIMIT_MAX_REQUESTS: "100"
  # Logging configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  # Kagent A2A configuration
  KAGENT_A2A_URL: "http://kagent.kagent.svc.cluster.local:8083/api/a2a"
  KAGENT_A2A_TIMEOUT: "30"
  # Security headers
  SECURITY_HEADERS_ENABLED: "true"
  HSTS_MAX_AGE: "31536000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slack-bot
  namespace: slack-bot
  labels:
    app: slack-bot
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: slack-bot
  template:
    metadata:
      labels:
        app: slack-bot
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: slack-bot-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: slack-bot
        image: your-registry/slack-bot:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        # Load secrets
        - name: SLACK_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: slack-secrets
              key: SLACK_BOT_TOKEN
        - name: SLACK_SIGNING_SECRET
          valueFrom:
            secretKeyRef:
              name: slack-secrets
              key: SLACK_SIGNING_SECRET
        - name: SLACK_APP_TOKEN
          valueFrom:
            secretKeyRef:
              name: slack-secrets
              key: SLACK_APP_TOKEN
        - name: SLACK_TEAM_ID
          valueFrom:
            secretKeyRef:
              name: slack-secrets
              key: SLACK_TEAM_ID
        - name: SLACK_CHANNEL_IDS
          valueFrom:
            secretKeyRef:
              name: slack-secrets
              key: SLACK_CHANNEL_IDS
        # Load config
        envFrom:
        - configMapRef:
            name: slack-bot-config
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        # Resource limits
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # Startup probe for slower starts
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        # Volume mounts for writable directories
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - slack-bot
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: slack-bot-service
  namespace: slack-bot
  labels:
    app: slack-bot
  annotations:
    cloud.google.com/backend-config: '{"default": "slack-webhook-backend"}'
spec:
  type: ClusterIP
  selector:
    app: slack-bot
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: slack-bot-sa
  namespace: slack-bot
  labels:
    app: slack-bot
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: slack-bot-role
  namespace: slack-bot
rules:
# Minimal permissions - no cluster-wide access
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
  resourceNames: ["slack-secrets"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: slack-bot-binding
  namespace: slack-bot
subjects:
- kind: ServiceAccount
  name: slack-bot-sa
  namespace: slack-bot
roleRef:
  kind: Role
  name: slack-bot-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: slack-bot-hpa
  namespace: slack-bot
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: slack-bot
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: slack-bot-pdb
  namespace: slack-bot
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: slack-bot
